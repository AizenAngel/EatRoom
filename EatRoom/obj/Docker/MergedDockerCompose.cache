services:
  basket.api:
    build:
      context: C:\Users\Luka\Desktop\EatRoom\EatRoom
      dockerfile: Basket/Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
    image: basketapi
    ports:
    - published: 8005
      target: 80
  basketdb:
    container_name: basketdb
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    restart: always
  identityserver:
    build:
      context: C:\Users\Luka\Desktop\EatRoom\EatRoom
      dockerfile: Security/IdentityServer/Dockerfile
    container_name: identityserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:IdentityConnectionString: Server=mssql;Database=IdentityDb;User
        Id=sa;Password=bozaCar12345rs2;
    image: identityserver
    ports:
    - published: 8001
      target: 80
  mssql:
    container_name: mssql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: bozaCar12345rs2
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
    - published: 1433
      target: 1433
    restart: always
    volumes:
    - mssql_data:/var/opt/mssql/data:rw
  orderdb:
    container_name: orderdb
    environment:
      POSTGRES_DB: order
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    image: postgres
    ports:
    - published: 5433
      target: 5432
    restart: always
    volumes:
    - postgres_data2:/var/lib/postgresql/data/:rw
  ordering.api:
    build:
      context: C:\Users\Luka\Desktop\EatRoom\EatRoom
      dockerfile: Ordering.API/Dockerfile
    container_name: ordering.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: '"Server=orderdb;Port=5432;Database=order;User
        Id=root;Password=root;"'
    image: orderingapi
    ports:
    - published: 8003
      target: 80
  restaurants.api:
    build:
      context: C:\Users\Luka\Desktop\EatRoom\EatRoom
      dockerfile: Restaurants/Dockerfile
    container_name: restaurants.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: '"Server=restaurantsdb;Port=5432;Database=restaurants;User
        Id=root;Password=root;"'
    image: restaurantsapi
    ports:
    - published: 8002
      target: 80
  restaurantsdb:
    container_name: restaurantsdb
    environment:
      POSTGRES_DB: restaurants
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    image: postgres
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - postgres_data:/var/lib/postgresql/data/:rw
version: '3.4'
volumes:
  mssql_data: {}
  postgres_data: {}
  postgres_data2: {}